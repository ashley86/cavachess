{% extends 'layout.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" href={{ asset('css/chessboard-0.3.0.css')}}>
    <style>
        #jeu, #chat {float:left;}
    </style>
{% endblock %}

{% block page_title %}
    <h1>
        Ma partie
    </h1>
{% endblock %}

{% block content %}
    {#    {{dump(app.user)}}
        {{dump(app.request)}}
        {{dump(app.session)}}#}
    <h3 id="adversaire"></h3>
    <p id="info"></p>
    <div id="clockdivp1">
        <p>
            <span id="player1username"></span> <span class="hours"></span>:<span class="minutes"></span>:<span class="seconds"></span> 
        </p>
    </div>
    <div id="clockdivp2">
        <p>
            <span id="player2username"></span> <span class="hours"></span>:<span class="minutes"></span>:<span class="seconds"></span> 
        </p>
    </div>
    <section id="jeu">
        <div id="board" style="width: 400px"></div>
        <p>Status: <span id="status"></span></p>
        <p>FEN: <span id="fen"></span></p>
        <p>PGN: <span id="pgn"></span></p>           
    </section>
    <section id="chat" style="margin: 0px 0px 20px 40px">
        <div id="chat-output" style="width: 400px; height : 400px; border: 1px solid black; margin-bottom:20px;">
        </div>
        <form id="chat-input">
            <textarea id ="message" name="message" style="width: 400px; height : 150px;"></textarea>
            <input type="submit" value="envoyer" style="display:block;" />
        </form>
    </section>
    <div class="clearfix"></div>
    <div
        id="js-vars"
        data-vars="{{ js_vars|json_encode|e('html_attr') }}">
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js"></script>
    <script src="{{ asset('js/chessboard-0.3.0.js')}}"></script>				
    <script src="{{ asset('js/countdown.js')}}"></script>				
    <script>
     
        // Getting data from service js_vars
        var JsVars = $('#js-vars').data('vars');    
        // var obj from service js_vars
        var chartData = JsVars.chartData;

        /* Initialization */
        var connected = false; // not connected
        var username = chartData.user; // player username
        var competition = chartData.competition; // game competition
        var gametime = chartData.gametime; // game time limit
        var ingameclock = {
            hours : parseInt(gametime.substr(0,2)),
            minutes: parseInt(gametime.substr(3,2)),
            seconds: parseInt(gametime.substr(6,2))
        };
        var rank = chartData.rank; // player rank
        var room = ''; // socket room
        var player = ''; // player color ('white' or 'black')
        var opponent = ''; // username of your opponent
        var gameisover = ''; // game end (win, draw, loss)
        var timeisover = ''; // time running out
        var nbplays = 0; // total plays
        var urlajax = "{{ path('app_game_registergame')}}";
        
        /* Connexion au serveur */
        // fire un événement 'connection' coté serveur et 'connect' coté client
        var socket = io("http://localhost:3000");
        
        /* Envoi du pseudo au serveur */
        socket.on('connect', function(data) {
            connected = true; // Connecté
            socket.emit('login', {'username' : username, 'competition': competition, 'rank' : rank}); // Envoie de l'event 'login' qui contient mon username
        });
        
        /* Websocket server 'gameStart' event response, initializing game */
        socket.on('gameStart', function(data) {
            room = data.room;
            player = data.color;   
            opponent = data.name;
            $("#adversaire").html(username+" ("+rank+" points), joue en "+ data.color +" contre "+data.name+" ("+data.rank+" points)");
            /* Nom des joueurs pour le chronomètre */
            if(player === 'white'){
                $("#player1username").text(username);
                $("#player2username").text(data.name);
            }
            else{
                $("#player1username").text(data.name);
                $("#player2username").text(username);
            }
            
            
            /* Initializing timers */
            var clock = Date.parse(new Date(Date.parse(new Date()) + ((ingameclock.hours*60*60) + (ingameclock.minutes * 60) + ingameclock.seconds) * 1000));
            initializeClockp1('clockdivp1', clock);
            initializeClockp2('clockdivp2', clock);
            clearInterval(timeintervalp2);
        });
        
        /* Websocket server 'endGame' event response, disconnecting user when opponent has left */
        socket.on('gameEnd', function(data) {
            $('#info').append($('<p>').text("Votre adversaire a quitté, vous serez déconnecté automatiquement dans 5 secondes !"));
            //setTimeout(setLocation, 5000);
            
            if(!gameisover){
                clearInterval(timeintervalp2);
                clearInterval(timeintervalp1);
                $("#adversaire").html("Partie terminée, vous avez gagné");
                gameisover = 'youwin';
                /* Registering game info when game ended */
                registerGame(urlajax, username, opponent, gamelength(ingameclock, getClockp1(), getClockp2()), nbplays, competition);
            } 
            room = '';         
        });

        /* Websocket server 'gameOver' event response, displaying game draw or game loss */
        socket.on('gameOver', function(data) {
            clearInterval(timeintervalp2);
            clearInterval(timeintervalp1);
            if (data === 'youwin'){
                gameisover = 'youloose';
                $("#adversaire").html("Partie terminée, vous avez perdu");
            }
            else if (data === 'draw'){
                gameisover = 'draw';
                $("#adversaire").html("Partie terminée, match nul");
            }          
            room = '';
        });
        
        /* Function location assignment */
        function setLocation()
        {
            window.location.assign("{{path('app_competition_displaycompetitions')}}");
        }
        
        /* Chat emit */
        $("#chat-input").on("submit", function(e) {
            e.preventDefault();
            var message = $("#message").val();
            socket.emit('chatmessage', {'message' : message, 'username' : username});
            $("#message").val("");
        });
        
        /* Chat server response */
        socket.on('receptionmessage', function(data) {
            var message = $('<p>').text(data);
            $("#chat-output").append(message);
        });
        

    </script>    
    <script src="{{ asset('js/board.js')}}"></script>    
    <script src="{{ asset('js/registergame.js')}}"></script>    
{% endblock %}